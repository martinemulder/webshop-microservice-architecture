// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlow.GeneratedTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SalesMedewerkerOverzichtFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SalesMedewerkerOverzicht", "\tOm bestellingen boven de 500 euro te kunnen goedkeuren\r\n\tAls salesmedewerkers\r\n\t" +
                    "Wil ik een overzicht van alle bestellingen boven de 500 euro zien", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "SalesMedewerkerOverzicht")))
            {
                SpecFlow.GeneratedTests.SalesMedewerkerOverzichtFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SalesMedewerkerOverzicht")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("mytag")]
        public virtual void HaalAangemaakteBestellingenBoven500EuroOp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Haal aangemaakte bestellingen boven 500 euro op", new string[] {
                        "mytag"});
            this.ScenarioSetup(scenarioInfo);
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Klantnummer",
                        "FactuurTotaalInclBtw",
                        "BestelStatus"});
            table1.AddRow(new string[] {
                        "1",
                        "1",
                        "290.00M",
                        "BestelStatus.Verzonden"});
            table1.AddRow(new string[] {
                        "2",
                        "2",
                        "140.95M",
                        "BestelStatus.Goedgekeurd"});
            table1.AddRow(new string[] {
                        "3",
                        "3",
                        "590.00M",
                        "BestelStatus.Geplaatst"});
            table1.AddRow(new string[] {
                        "4",
                        "4",
                        "500.00M",
                        "BestelStatus.Geplaatst"});
            table1.AddRow(new string[] {
                        "5",
                        "5",
                        "500.01M",
                        "BestelStatus.Geplaatst"});
            table1.AddRow(new string[] {
                        "6",
                        "6",
                        "59.00M",
                        "BestelStatus.Geplaatst"});
            table1.AddRow(new string[] {
                        "7",
                        "7",
                        "1590.00M",
                        "BestelStatus.Geplaatst"});
            testRunner.Given("de volgende bestellingen staan in de database", ((string)(null)), table1, "Given ");
            testRunner.When("het sales medewerker overzicht is opgevraagd", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("zie ik alleen bestellingen boven de 500 euro", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            testRunner.And("alleen bestellingen met de status Geplaatst", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SalesMedewerkerOverzicht")]
        public virtual void KlantDoetTweeBestellingenMetEenTotaalbedragBovenDe500Euro()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Klant doet twee bestellingen met een totaalbedrag boven de 500 euro", ((string[])(null)));
            this.ScenarioSetup(scenarioInfo);
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Klantnummer",
                        "FactuurTotaalInclBtw",
                        "BestelStatus"});
            table2.AddRow(new string[] {
                        "1",
                        "1",
                        "290.00M",
                        "BestelStatus.Goedgekeurd"});
            table2.AddRow(new string[] {
                        "2",
                        "1",
                        "340.95M",
                        "BestelStatus.Geplaatst"});
            table2.AddRow(new string[] {
                        "3",
                        "2",
                        "265.95M",
                        "BestelStatus.Betaald"});
            table2.AddRow(new string[] {
                        "4",
                        "2",
                        "265.95M",
                        "BestelStatus.Geplaatst"});
            testRunner.Given("de volgende bestellingen staan in de database", ((string)(null)), table2, "Given ");
            testRunner.When("het sales medewerker overzicht is opgevraagd", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("zie ik de bestelling met id 2 in het overzicht", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SalesMedewerkerOverzicht")]
        public virtual void SalesMedewerkerVraagtOmAanbetaling()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sales medewerker vraagt om aanbetaling", ((string[])(null)));
            this.ScenarioSetup(scenarioInfo);
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Klantnummer",
                        "FactuurTotaalInclBtw",
                        "BestelStatus"});
            table3.AddRow(new string[] {
                        "1",
                        "1",
                        "590.00M",
                        "BestelStatus.Geplaatst"});
            testRunner.Given("de volgende bestelling staat in het sales medewerker overzicht", ((string)(null)), table3, "Given ");
            testRunner.When("de sales medewerker vraagt om een aanbetaling", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
            testRunner.Then("verandert de status van bestelling met id 1 in BestalStatus.AfwachtenOpAanbetalin" +
                    "g", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
